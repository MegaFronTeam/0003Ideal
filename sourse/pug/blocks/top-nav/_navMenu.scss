.menu{
	@include media-breakpoint-up(lg) {

		display: flex;
		// text-align: center;
		@include roww(20px);
		flex-wrap: wrap;
	}
	@include media-breakpoint-down(lg) {
		display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
		margin-bottom: rem(40);
	}
	list-style: none;
	position: relative;
	margin-bottom: 0;
	max-width: 100%;
	li{
		
		// margin-left: 0;
		// margin-right: 0;
		padding: 0;
		@include media-breakpoint-down(lg) {
			width: calc(100% / 2);
		}
	}
	a{
		display: block;
		// padding: rem(20) calc(var(--bs-gutter-x) / 2);
		font-size: rem(20);
		color: $white;
		text-decoration: underline;
		text-decoration-color: transparent;
		@include media-breakpoint-up(lg) {
			font-size: rem(34);
		}
		&:hover {
			text-decoration-color: $white;
		}
	}
}



.toggle-menu-mobile {
	--h: #{2px};
	--color: #{$body-color};
	--position: calc(var(--h) * 2.5);
	&.on span {
		--color: transparent;
		&::after, &::before {
			--color: #{$body-color};
		}
	}

	&.on  { 
		--position: 0; 
		--rotate: 45deg;
	}
	display: block;
	height: 48px;
	position: relative; 
	font-size: 32px;
	width: 48px;
	background-color: $white;
	border-radius: 50%;
	cursor: pointer;
	span:after,
	span:before {
		content: "";
		position: absolute;
		left: 0;
	} 
	span {
		@include a-cent(y);
		display: block;
		left: 50%;
    transform: translateX(-50%);
	}

	span:before { 
		top: var(--position);
		transform: rotate3d(0,0,1, var(--rotate, 0));
	}

	span:after {
		bottom: var(--position);
		transform: rotate3d(0,0,1, calc(-1 * var(--rotate,0)));
	}
	span,
	span:after,
	span:before {
		// width: 32px;
		width: 18px;
		height: var(--h);
		background-color: var(--color);
		transition: all 0.3s;
		backface-visibility: hidden; 
		transform-origin: 50% 50%;
	} 
}

	

	.menu-mobile {
		position: fixed !important;
		z-index: 1100;
		height: calc(var(--vh, 1vh) * 100);
		top: 0;
		right: 0;
		visibility: hidden;
		width: 100%;
			// transform: translate3d(0, -120%,0);
			z-index: -1;
			opacity: 0;
		transition: opacity 0.5s, visibility 0s 0.5s;
		&.active{
			transition: opacity 0.5s;
			opacity: 1; 
			visibility: visible;
			.container-fluid > *{
				opacity: 1; 
				transform: rotateX(0deg);
			}
		}
		&:not(.active){
			
		}
		@include mt(.6s);
		will-change: transform;
		.container-fluid{
			perspective: 1200px;
			& > * {
				opacity: 0.4; 
				transform: translateY(-15%) rotateX(15deg); 
				transition: transform 0.5s, opacity 0.5s;
			}

		}
	}
